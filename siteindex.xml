<?xml version="1.0" encoding="UTF-8" ?>
<Module>
	<ModulePrefs title="popularity gadget" height="100">
  		<Require feature="dynamic-height"/>

	</ModulePrefs>

	<UserPref
		name="sitecode"
		required="true"
		datatype="string"
		display_name="site code as used by cSiteStats"
		default_value="ramblings"/>

	<UserPref
		name="feedtitle"
		required="true"
		datatype="string"
		display_name="title for image"
		default_value="hover to view popularity index of topics on this site"/>

	<UserPref
		name="feedurl"
		required="true"
		datatype="string"
		display_name="Apps script webapp to get stats from"
		default_value="https://script.google.com/macros/s/AKfycbxYFGXtaB6eww6u6mKcMSQgMpaCGH6y8JZxwvhTSCvfS3JwGx6D/exec"/>

	<UserPref
		name="imageurl"
		required="true"
		datatype="string"
		display_name="image url for activation"
		default_value="http://googledrive.com/host/0B92ExLh4POiZMmRzSC1QRk5TLXM"/>

  <Content type="html"><![CDATA[

        <style>
          .feedbox {
            font-size:.8em;
            padding:6px;
          }
          .feedtitle {
            font-weight:bold;
          }
          .hover {
            display:inline-block;
          }

          .poptable table {

            border-collapse: collapse;
            border-spacing: 0;
          	width:100%;
          	height:100%;
          	margin:0px;padding:0px;

          }

          .poptable tr:nth-child(odd){
            background-color:#FFECB3;
            color:#212121;
          }

          .poptable tr:nth-child(even) {
            background-color:#B6B6B6;
            color:#212121;
          }

          .poptable td {
          	vertical-align:middle;
          	text-align:left;
          	padding:4px;
          	color:#212121;
          	font-size:0.7em;
          	border:1px solid #FFFFFF;
          }

          .poptable tr:first-child td{
            font-weight:bold;
            background:#FFA000;
            color:#212121;
          }

        </style>

        <div id="hover" class="hover">
            <table>
                <tr>
                    <td>
                        <img id="hoverimg" src="http://googledrive.com/host/0B92ExLh4POiZMmRzSC1QRk5TLXM">
                    </td>
                    <td id="tdtitle" class="feedtitle">

                    </td>
                </tr>
            </table>
        </div>

        <div class="feedbox" id="feedbox" style="display:none;">
          <div id="sourcetitlebox">
          </div>
          <div id="source">
          </div>
        </div>

        <script>
        // gadget hosted at https://googledrive.com/host/0B92ExLh4POiZNE1mbTR2TXloVUk

        // register the entry point
        gadgets.util.registerOnLoadHandler(doFeed);


        function setVisiblity (e, value) {
         	e.style.display = value ? "inline-block" : "none";
        }

        function getHeight (e) {
         		return e.offsetHeight;
        }

        var globs = {};

        function doFeed() {


          // this is the image that gets out of the way when hovered over
          globs.hoverElem = document.getElementById("hover");
          globs.hoverImg = document.getElementById("hoverimg");

          // get the pref parameters
          var prefs = new gadgets.Prefs();

          // construct the api url
          globs.feedUrl = prefs.getString("feedurl");
          globs.siteCode = prefs.getString("sitecode");

          // this is where the feeds will be stored
          globs.feedBox = document.getElementById("feedbox");
          globs.tdTitle = document.getElementById("tdtitle");
          globs.sourceTitleBox = document.getElementById("sourcetitlebox");
          globs.source = document.getElementById("source");
          globs.tdTitle.innerHTML = prefs.getString("feedtitle") +
          " (click to lock/unlock view)";

          // set up image events
          globs.hoverImg.src = prefs.getString("imageurl");
    			if(!globs.hoverImg.src){
    				console.log ("disabled feed display - no image provided");
    			}

          // clicker on whether to lock visibility status
          globs.locked = false;

    			globs.hoverElem.addEventListener("mouseout",over , false);
  		   	globs.source.addEventListener("click",lock , false);
    			globs.hoverElem.addEventListener ("load", function () {
    				// when the image loads, get its height and adjust the gadget height to match
    				gadgets.window.adjustHeight(getHeight(globs.hoverElem));
    			}, false);

          // happens on mouseover
          function over () {
            // means we need to start showing the source
            globs.hoverElem.removeEventListener("mouseover", over );
            globs.source.addEventListener("mouseout", out, false);
          	setVisiblity(globs.feedBox, true);
          	setVisiblity(globs.hoverElem, false);
          	gadgets.window.adjustHeight(getHeight(globs.feedBox));
          };

          // happens on mouseclick
          function lock () {
            globs.locked = !globs.locked;

            // do an implied out - if its locked then nothing will happen
            out();
          };

          // happens on mouseout
          function out () {
            // we are showing the source and need to stop if not locked
            if (!globs.locked) {
              globs.source.removeEventListener("mouseout",out);
              globs.hoverElem.addEventListener("mouseover",over , false);

            	setVisiblity(globs.feedBox, false);
            	setVisiblity(globs.hoverElem, true);
            	gadgets.window.adjustHeight(getHeight(globs.hoverElem));
            }
          };

          // get the content
          getData(globs.feedUrl + "?sitecode=" +globs.siteCode);

      }

      //process it
      function doIt(data) {

        globs.source.innerHTML = "";

        if(!data.stats) {
          textAdd( globs.source,
            "No data returned for " + globs.feedUrl
          );
        }
        else {
          try {
            makeTable( globs.source, data.stats);
          }
          catch (err) {
            textAdd( globs.source,
            "failed to convert data from github " +
            err + ":perhaps browser is incapable" +
            "\nwas retrieving " + globs.feedUrl +
            "\noriginal data was\n" + JSON.stringify(data,undefined, 2));
          }
        }
      }

      /*looks like this
      {"name":"socialtest",
      "plusOnes":7,
      "url":"https://sites.google.com/a/mcpher.com/share/Home/excelquirks/socialtest",
      "pageViews":[
        {"period":"Past Month","pageViews":16},
        {"period":"Past Year","pageViews":203},
        {"period":"All Time","pageViews":0}]
      }
      */

      function elAdd (parent, type, aclass) {
        var elem = document.createElement(type);
        if(aclass) elem.className = aclass;
        parent.appendChild(elem);
        return elem;
      }

      function textAdd (parent, text) {
        var elem = document.createTextNode(text);
        parent.appendChild(elem);
        return elem;
      }

      function makeTable (elem,ob) {

        // remake it
        var table = elAdd ( elem , "table" , "poptable");

        var heads = [
          "name","plusOnes","Past Month","Past Year","All Time"
        ];

        // headings
        var tr = elAdd (table , "tr" );
        heads.forEach (function(d) {
          textAdd (elAdd (tr,"td"), d.toString());
        });

        // rows
        ob.forEach (function(o) {
          var tr = elAdd (table,"tr");
          heads.forEach (function(d) {
            
            // a cell for each header
            var cellContent = 
              o.hasOwnProperty (d) ?
                o[d] :
                o.pageViews.reduce (function(p,c) {
                  if (c.period === d) {
                    p = c.pageViews;
                  }
                  return p;
                },"n/a");
          
            
            // the cell
            var td = elAdd (tr , "td");
            
            // add a link for the name
            if (d === "name") {
            
            // extract the current domain
					    var current = getDomainOb(document.referrer.toString());
					    var target = getDomainOb(o.url);

              var  a = elAdd (td, "a");
              a.href = sitesUrlPatch ( current, target);
              a.target = "_parent";
              textAdd (a , cellContent);
            }
            
            // just plain cell data
            else {
              textAdd (td , cellContent);
            }
          });
        });
        return table;
      }
      
      function getDomainOb (url) {
        var a = document.createElement('a');
        a.setAttribute('href', url);
        return {
          domain:a.hostname,
          url:url,
          path:a.pathname,
          proto:a.protocol
        };
      }
      
      // patches up the target url according to the current synonym
      function sitesUrlPatch(currentOb, targetOb) {

        var modUrl = "";	  
        
        if (currentOb.domain === targetOb.domain &&
              currentOb.proto === targetOb.proto) {
          // no change needed
          return targetOb.url;
        }
        
        else {
          // typically this will be https://sites.google.com/a/dom.com/optroot/ .....
          // becoming
          // http://something.dom.com/....
          
          // find the first path element in the current - in my case it's /Home

          var root = /(\/[^\/]*)/.exec(currentOb.path) ;
          
          // now find that root in the target and capture the rest
          if (root && root.length > 1) {
            var tail = new RegExp ("(" + root[1].replace("/","\/") + ".*)" ).exec(targetOb.path);
            // construct the modified url
            if(tail && tail.length > 0) modUrl =  tail[1].toString();
            
          }
          
          return currentOb.proto + "//" + currentOb.domain + modUrl;

        }
      
      }

    	// jsonp response
    	function response(result) {

  	    if (!result) {
  	    	console.log ( 'error - no stats (' + JSON.stringify(result) + ")");
  	    }
  	    doIt(result);
   	  }

   	  // easy jsonp.
      function getData(url) {
		    var script = document.createElement('script');
        script.src = url + "&callback=response";
		    document.body.appendChild(script);
  	  }

  	</script>
  ]]>
  </Content>
</Module>
